package accessory;

//This class includes all the default values, mainly the ones directly generated by a call to a static 
//method, except for the ones listed in any other "_"[class_name] like _basic or _alls. 
//All these constants are final and local copies in other classes are encouraged.

abstract class _defaults 
{	
	public static final String STRING = "";
	public static final double DECIMAL = 0.0;
	public static final long LONG = 0l;
	public static final int INT = 0;

	public static final int SIZE_STRING = 100;
	public static final int SIZE_ARRAY = 5;
	public static final int SIZE_DECIMALS = 3;
	
	public static final double SIZE_DB_DECIMAL = db.get_default_size(data.DECIMAL);
	public static final double SIZE_DB_LONG = db.get_default_size(data.LONG);
	public static final double SIZE_DB_INT = db.get_default_size(data.INT);
	public static final int SIZE_DB_STRING = db.get_default_size(data.STRING);
	public static final int SIZE_DB_STRING_BIG = db.get_default_size(data.STRING_BIG);
	public static final int SIZE_DB_BOOLEAN = db.get_default_size(data.BOOLEAN);
	public static final int SIZE_DB_TIMESTAMP = db.get_default_size(data.TIMESTAMP);	
	
	public static final int SIZE_MYSQL_NUMBER = 8;
	public static final int SIZE_MYSQL_DECIMALS = SIZE_DECIMALS;
	public static final int SIZE_MYSQL_VARCHAR = SIZE_STRING;
	public static final int SIZE_MYSQL_TEXT = strings.SIZE_BIG;

	public static final String DATES_FORMAT = dates.DATE;
	
	public static final String USER = "user1";
	
	public static final String APP_NAME = "app";
	public static final String DIR_APP = paths.get_default_dir(paths.DIR_APP);
	public static final String DIR_INI = paths.get_default_dir(paths.DIR_INI);
	public static final String DIR_LOGS = paths.get_default_dir(paths.DIR_LOGS);
	public static final String DIR_LOGS_ERRORS = paths.get_default_dir(paths.DIR_LOGS_ERRORS);
	public static final String DIR_LOGS_ACTIVITY = paths.get_default_dir(paths.DIR_LOGS_ACTIVITY);
	public static final String DIR_CREDENTIALS = paths.get_default_dir(paths.DIR_CREDENTIALS);
	public static final String DIR_CRYPTO = paths.get_default_dir(paths.DIR_CRYPTO);

	public static final boolean CREDENTIALS_ENCRYPTED = false;
	public static final String CREDENTIALS_WHERE = types.CONFIG_CREDENTIALS_WHERE_FILE;
	public static final String CREDENTIALS_FILE_DIR = DIR_CREDENTIALS;
	public static final String CREDENTIALS_FILE_EXTENSION = strings.DEFAULT;
	public static final String CREDENTIALS_FILE_SEPARATOR = misc.SEPARATOR_NAME;
	public static final String CREDENTIALS_FILE_USERNAME = "username";
	public static final String CREDENTIALS_FILE_PASSWORD = "password";
	public static final String CREDENTIALS_FILE_ENCRYPTED = "enc";
	public static final String CREDENTIALS_ID = "credentials";
	public static final String CREDENTIALS_USER = USER;
	
	public static final String CRYPTO_ID = "crypto";
	public static final String CRYPTO_FILE_CIPHER = "cipher";
	public static final String CRYPTO_FILE_KEY = "key";
	public static final String CRYPTO_FILE_EXTENSION = strings.DEFAULT;
	
	public static final String DB_TYPE = db.MYSQL;
	public static final String DB_SETUP = types.CONFIG_DB_SETUP_DEFAULT;
	public static final String DB_MAX_POOL = "500";
	public static final String DB_NAME = STRING;
	public static final String DB_HOST = "localhost";
	public static final String DB_USER = STRING;
	public static final String DB_DEFAULT_COL_ID = "_id";
	public static final String DB_DEFAULT_COL_TIMESTAMP = "_timestamp";
	public static final String DB_CREDENTIALS_TYPE = types.remove_type(DB_TYPE, types.CONFIG_DB_TYPE);
	public static final String DB_CREDENTIALS_USERNAME = STRING;
	public static final String DB_CREDENTIALS_PASSWORD = STRING;
	public static final boolean DB_CREDENTIALS_ENCRYPTED = CREDENTIALS_ENCRYPTED;
	public static final String DB_ORDER = db_order.ASC;
	public static final boolean DB_ORDER_FIELD = true;
	public static final String DB_WHERE_LINK = db_where.AND;
	public static final String DB_WHERE_OPERAND = db_where.EQUAL;
	public static final boolean DB_WHERE_LITERAL = true;
	
	public static final String LOGS_DB_TABLE = "logs";
	public static final String LOGS_DB_COL_ID = "id";
	public static final String LOGS_DB_COL_MESSAGE = "message";
	
	public static final String TESTS_DB_TABLE = "tests";
	public static final String TESTS_DB_COL_INT = "int";
	public static final String TESTS_DB_COL_STRING = "string";
	public static final String TESTS_DB_COL_DECIMAL = "decimal";

	public static final boolean LOGS_SCREEN = true;
	public static final boolean LOGS_FILE = true;
	public static final boolean LOGS_DB = false;

	public static final String CRYPTO_ALGORITHM_CIPHER = "AES/CTR/NoPadding";
	public static final String CRYPTO_ALGORITHM_KEY = "AES";
	
	public static void populate() { } //Method forcing this class to load when required (e.g., from the ini class).
}